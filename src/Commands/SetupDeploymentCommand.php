<?php

namespace Knackline\LaravelDeploy\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\File;

class SetupDeploymentCommand extends Command
{
    protected $signature = 'deploy:setup';
    protected $description = 'Set up deployment configuration and script';

    public function __construct()
    {
        parent::__construct();
    }

    public function handle()
    {
        // Ask for user inputs
        $projectPath = $this->ask('Enter the path of the Laravel project/application (leave blank for root)');
        $gitBranch = $this->ask('Enter the default git branch to deploy');
        $phpVersion = $this->ask('Enter the PHP version (leave blank for default: /usr/bin/php)');

        // Use root directory if no path is provided
        $projectPath = empty($projectPath) ? base_path() : $projectPath;

        // Validate git branch
        if (empty($gitBranch)) {
            $this->error('The git branch is required.');
            return 1;
        }

        // Default to /usr/bin/php if no PHP version is provided, otherwise format as /usr/bin/php@version
        $phpPath = empty($phpVersion) ? '/usr/bin/php' : "/usr/bin/php@$phpVersion";

        // Check if Horizon and Telescope are installed
        $hasHorizon = File::exists($projectPath . '/artisan') && strpos(shell_exec("php artisan | grep 'horizon:'"), 'horizon:') !== false;
        $hasTelescope = File::exists($projectPath . '/artisan') && strpos(shell_exec("php artisan | grep 'telescope:'"), 'telescope:') !== false;

        // Update configuration file with detailed comments
        $configPath = config_path('deploy.php');
        $configContent = "<?php\n\n" .
            "/**\n" .
            " * Deployment Configuration\n" .
            " *\n" .
            " * This configuration file is generated by Knackline's Laravel Deploy package.\n" .
            " * It allows you to customize the deployment script according to your project's needs.\n" .
            " *\n" .
            " * @credits: Knackline, Rajkumar Samra\n" .
            " */\n\n" .
            "return [\n" .
            "    'script_path' => base_path('deploy.sh'),\n" .
            "    'project_path' => '$projectPath',\n" .
            "    'git_branch' => '$gitBranch',\n" .
            "    'php_path' => '$phpPath',\n" .
            "];\n";
        file_put_contents($configPath, $configContent);

        // Create or update deployment script with credits and conditionally include Horizon/Telescope commands
        $scriptContent = "#!/bin/bash\n\n" .
            "# Deployment Script\n" .
            "# Generated by Knackline's Laravel Deploy package\n" .
            "# @credits: Knackline, Rajkumar Samra\n\n" .
            "cd $projectPath\n\n" .
            "git fetch\n" .
            "git stash\n\n" .
            "git reset origin/$gitBranch --hard\n\n" .
            "$phpPath /usr/local/bin/composer install --no-interaction --prefer-dist --optimize-autoloader\n\n";

        if ($hasHorizon) {
            $scriptContent .= "$phpPath artisan horizon:terminate\n";
        }

        $scriptContent .= "$phpPath artisan optimize:clear\n" .
            "$phpPath artisan migrate --force\n";

        if ($hasTelescope) {
            $scriptContent .= "$phpPath artisan telescope:prune\n";
        }

        $scriptContent .= "\necho \"ðŸš€ Application deployed!\"\n";

        $scriptPath = base_path('deploy.sh');
        file_put_contents($scriptPath, $scriptContent);
        chmod($scriptPath, 0755);

        $this->info('Deployment setup complete. Configuration file and script have been updated.');
        return 0;
    }
}
